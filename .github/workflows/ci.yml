name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Generate coverage report
      run: |
        echo "## Test Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "### Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        npx jest --coverage --coverageReporters="text-summary" --no-cache 2>/dev/null | tail -n 20 >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

    - name: Check coverage thresholds
      run: |
        # Extract coverage percentages from lcov report
        COVERAGE=$(npx jest --coverage --coverageReporters="json-summary" --no-cache 2>/dev/null)
        
        # Parse the coverage summary
        LINES=$(node -e "const cov=require('./coverage/coverage-summary.json'); console.log(cov.total.lines.pct)")
        STATEMENTS=$(node -e "const cov=require('./coverage/coverage-summary.json'); console.log(cov.total.statements.pct)")
        FUNCTIONS=$(node -e "const cov=require('./coverage/coverage-summary.json'); console.log(cov.total.functions.pct)")
        BRANCHES=$(node -e "const cov=require('./coverage/coverage-summary.json'); console.log(cov.total.branches.pct)")
        
        echo "Coverage - Lines: $LINES%, Statements: $STATEMENTS%, Functions: $FUNCTIONS%, Branches: $BRANCHES%"
        
        # Check if coverage meets minimum threshold (70%)
        if (( $(echo "$LINES < 70" | bc -l) )); then
          echo "❌ Coverage is below 70% threshold"
          exit 1
        else
          echo "✅ Coverage meets minimum threshold"
        fi

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report-${{ matrix.node-version }}
        path: |
          coverage/
          !coverage/tmp/

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Check build output
      run: |
        if [ ! -d ".next" ]; then
          echo "Build failed - .next directory not found"
          exit 1
        fi
        echo "✅ Build successful"